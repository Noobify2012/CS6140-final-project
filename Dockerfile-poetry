FROM debian:buster-slim as pyenv-setup
ARG PYTHON_VERSION=3.10.11

RUN apt-get update && apt-get upgrade && apt-get install -y \
    --no-install-recommends \
	build-essential \
	ca-certificates \
	curl \
    git \
	libbz2-dev \
	libffi-dev \
	liblzma-dev \
	libncurses5-dev \
	libreadline-dev \
	libsqlite3-dev \
	libssl-dev \
	libxml2-dev \
	libxmlsec1-dev \
	llvm \
	make \
    mecab-ipadic-utf8 \
	tk-dev \
	wget \
	xz-utils \
	zlib1g-dev

ENV HOME="/root"
WORKDIR $HOME
RUN git clone --depth=1 https://github.com/pyenv/pyenv.git .pyenv

ENV PYENV_ROOT="$HOME/.pyenv"
ENV PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
RUN pyenv install ${PYTHON_VERSION}
RUN pyenv global ${PYTHON_VERSION}

FROM pyenv-setup AS poetry-setup
ARG POETRY_VERSION=1.4.2
ARG POETRY_HOME=POETRY
ARG APP_NAME=FINAL_PROJECT
ENV \
    POETRY_VERSION=${POETRY_VERSION} \
    POETRY_HOME=/${POETRY} \
    # POETRY_VIRTUALENVS_IN_PROJECT=true \
    # POETRY_VIRTUALENVS_CREATE=true \
    POETRY_VIRTUALENVS_CREATE=false 
    # POETRY_NO_INTERACTION=true
RUN curl -sSL https://install.python-poetry.org | python -
WORKDIR /${APP_NAME}
ENV PATH="$PATH:${POETRY_HOME}/bin"

COPY poetry.lock pyproject.toml README.md ./
COPY ./src ./src
RUN poetry install --no-interaction --no-ansi
CMD ["poetry", "run"]
# CMD ["python"]


